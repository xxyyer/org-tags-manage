
#+OPTIONS: ^:nil
#+COLUMNS: %25ITEM %TODO %3PRIORITY %TAGS
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="style1.css" />
#+HTML_HEAD_EXTRA: <link rel="alternate stylesheet" type="text/css" href="style2.css" />
#+TAGS:



* 前言
- Emacs是一个系统，同时是我人生系统的一部分
- 希望需要不断完善，避免浪费精力做无用插件，把节奏慢下来，从需求开始，慢慢打磨
- 工作太忙，上班时间只把闪现的想法记下来，更新较慢
- 本内容日后也会作为工作输出分享给同事

* 需求
** 背景
*** 为什么要用标签？
- 让笔记作为第二大脑的阻碍是：信息输入量太大，存储容易，检索难；
- 用标签检索最优可达到O(1)的查找复杂度，而只用全文搜索存在精度太低或漏检的问题；
- 弱化文件夹分类，用标签分类解决一对多的问题；

*** 应用场景有哪些？
- 日程管理
  - todo
- 笔记管理
  - 通过标签可以快速得到一些表格类信息，比如在笔记中是离散的键绑定，当通过标签筛选后，就可以得出聚合的键绑定列表
- todo

*** 还需要什么功能？
- 在org标题tag的逻辑检索中加入：模糊检索、多标签补全
- 把文件也用tag管理起来，并实现上述检索方式
- 人性化舒服的使用体验

*** 开发思路是怎样的？
- 不重复造轮子，尽量用现有的工具、模块、库等资源
- 前后端结合，不局限于用elisp实现所有功能

** 功能
*** 后端：使用命令行或HTTP server给前端提供数据
- 文件可用标签管理
  - 可对目录进行标签初始化管理
  - 一个文件可有多个标签
  - 可批量对文件打标签
  - 可根据标签检索文件
  - 可通过文件检索标签
  - 可列出所有标签
  - 可列出所有带标签的文件
- 提供数据接口（以下方案选一种实现）
  - 方案一：通过命令行的方式调用，结果通过返回值提供给前端
  - 方案二：通过HTTP的方式调用，结果通过POST的请求返回给前端
*** 前端：使用org-mode作为主模式，ivy，company
- 检索
  - 检索文件标签
    - 可对tag逻辑（与或非）检索文件
    - 在minibuffer中可实现模糊补全标签
    - 在minibuffer中配合ivy，动态展示标签结果
    - 可通过检索内容跳转到源文件
  - 检索文件内标签
    - 使用tag逻辑表达式检索标题
    - 在对当前buffer文件中进行检索
    - 基于已检索的多个文件中检索
    - 可通过检索内容跳转到源文件
- 文件管理接口
（由于使用后端数据库管理文件，所以不能简单通过资源管理器更改文件，否是tag失效，因此需要通过特定接口操作文件）
  - 移动文件
  - 重命名文件
** 方案
todo
*** org
*** ivy
*** company
*** fuzzy
